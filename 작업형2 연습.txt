# 출력을 원하실 경우 print() 함수 활용
# 예시) print(df.head())

# getcwd(), chdir() 등 작업 폴더 설정 불필요
# 파일 경로 상 내부 드라이브 경로(C: 등) 접근 불가

# 데이터 파일 읽기 예제
import pandas as pd
X_test = pd.read_csv("data/X_test.csv")
X_train = pd.read_csv("data/X_train.csv")
y_train = pd.read_csv("data/y_train.csv")

# 사용자 코딩

# 답안 제출 참고
# 아래 코드 예측변수와 수험번호를 개인별로 변경하여 활용
# pd.DataFrame({'cust_id': X_test.cust_id, 'gender': pred}).to_csv('003000000.csv', index=False)

# 라이브러리
import pandas as pd

# 데이터 불러오기
X_test = pd.read_csv("data/X_test.csv")
X_train = pd.read_csv("data/X_train.csv")
y_train = pd.read_csv("data/y_train.csv")


# EDA
# (1) 환불금액 결측치 -> 0으로 대체
# (2) cust_id 불필요 -> 제거
# (3) 주구매상품, 주구매지점 -> 인코딩 sklearn.preprocessing.LabelEncoder

# 데이터 전처리
# (1)
X_train = X_train.fillna(0)
X_test = X_test.fillna(0)
# (2)
X_train = X_train.drop('cust_id', axis = 1)
cust_id = X_test.pop('cust_id')  # pop : X_test에서는 제거 + cust_id객체에 입력

# Feature Engineering
# (3)
from sklearn.preprocessing import LabelEncoder

cols = ['주구매상품','주구매지점']
for col in cols :
	le = LabelEncoder()
	X_train[col] = le.fit_transform(X_train[col])
	X_test[col] = le.fit_transform(X_test[col])
	
# 모델링 & 하이퍼파라미터 튜닝 & 앙상블
from sklearn.ensemble import RandomForestClassifier

model = RandomForestClassifier(n_estimators = 100, 
															 max_depth = 5, 
															 random_state = 2022)
model.fit(X_train, y_train['gender'])

predictions = model.predict_proba(X_test)


# csv
output = pd.DataFrame({'cust_id':cust_id, 'gender':predictions[:,1]})
output.to_csv("0000.csv", index = False)